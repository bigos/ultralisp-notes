* README

Docker manuals
https://docs.docker.com/
Command ~docker info~ lets you find many important facts about the docker installation

lots of info for beginners
https://www.freecodecamp.org/news/where-are-docker-images-stored-docker-container-paths-explained/

Ultralisp notes is a repo for note taking related to:
https://github.com/ultralisp/ultralisp.
we use my fork here
https://github.com/bigos/ultralisp

** Dependencies

*** Docker

**** Installation for web page
https://docs.docker.com/desktop/install/linux-install/
https://docs.docker.com/desktop/install/ubuntu/

failed

**** Installation from apt
#+begin_example
sudo apt install docker.io docker-compose
#+end_example

gives the following version
#+begin_example
docker --version
Docker version 20.10.21, build 20.10.21-0ubuntu1~22.04.2
#+end_example

** First unsuccessful running it on my machine

there is an org file for that
[[file:~/Programming/Lisp/ultralisp/DEV.org::*How to start server and worker outside Docker][How to start server and worker outside Docker]]

and

https://github.com/ultralisp/ultralisp#how-to-host-ultralisp-on-my-own-server

*** after cloning the repo,
trying to run:
#+begin_example
docker-compose run --rm mito migrate
#+end_example

gives me permission errors

Why? Do I need sudo?

or
https://docs.docker.com/engine/install/linux-postinstall/

*** trying to fix permissions
#+begin_example
sudo gpasswd -a $USER docker
#+end_example

leads to another error

#+begin_example
$ docker-compose run --rm mito migrate
ERROR:
        Can't find a suitable configuration file in this directory or any
        parent. Are you in the right directory?

        Supported filenames: docker-compose.yml, docker-compose.yaml, compose.yml, compose.yaml

#+end_example

https://docs.docker.com/engine/install/linux-postinstall/

*** the fix
#+begin_example
sudo gpasswd -a $USER docker
#+end_example

#+begin_example
docker run hello-world
#+end_example

gives
#+begin_quote
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pull complete
Digest: sha256:ffb13da98453e0f04d33a6eee5bb8e46ee50d08ebe17735fc0779d0349e889e9
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.
#+end_quote

*** running docker compose

#+begin_example
cd ~/Programming/Lisp/ultralisp
docker-compose run --rm mito migrate
#+end_example

gives lots of output that makes sense now

**** and an LW error

#+begin_quote
Step 15/36 : COPY dist-lw80 /lispworks
ERROR: Service 'mito' failed to build : COPY failed: file not found in build context or excluded by .dockerignore: stat dist-lw80: file does not exist
#+end_quote

***** investigation
two files with dist-lw80
file:~/Programming/Lisp/ultralisp/Dockerfile::46
file:~/Programming/Lisp/ultralisp/.github/workflows/build-and-deploy.yml::112

I will try to comment out lines 39-61 in [[file:~/Programming/Lisp/ultralisp/Dockerfile::46][Dockerfile]] first.

**** error in gen-deps-system, missing alexandria
#+begin_quote
; Loading "gen-deps-system"
[1/3] System 'gen-deps-system' found. Loading the system..
;
; caught ERROR:
;   READ error during COMPILE-FILE:
;
;     Package ALEXANDRIA does not exist.
;
;       Line: 111, Column: 35, File-Position: 5087
;
#+end_quote

***** investigation
gen deps in 4 files
file:~/Programming/Lisp/ultralisp/Dockerfile::92
file:~/Programming/Lisp/ultralisp/docker-compose.yml::155
file:~/Programming/Lisp/ultralisp/Makefile::13
file:~/Programming/Lisp/ultralisp/Lakefile::61

this script
file:~/Programming/Lisp/ultralisp/Dockerfile::92
seems to pull
https://github.com/40ants/gen-deps-system
I have the fork
https://github.com/bigos/gen-deps-system
should I try to add alexandria and push
file:~/Programming/Lisp/gen-deps-system/roswell/gen-deps-system.ros::8
and modify this
file:~/Programming/Lisp/ultralisp/Dockerfile::92
to pull from
https://github.com/bigos/gen-deps-system

I have forks of two svetlak's repos and was able to run the docker command.



** Successful running it on another machine
#+begin_example
sudo apt install docker.io docker-compose
docker --version
sudo gpasswd -a $USER docker

# log out and log in again

docker run hello-world

cd ~/Programming/Lisp/ultralisp
docker-compose run --rm mito migrate
sudo chmod 777 ./postgresql-data
docker-compose up app
#+end_example

*** viewing the results
Successful run of the above can be verified by opening another terminal and
running the script with the command and output like this
#+begin_example
$ docker ps
CONTAINER ID   IMAGE                                  COMMAND                  CREATED          STATUS          PORTS                                                NAMES
d3bd09c5eafc   ultralisp_app                          "s6-svscan /etc/s6"      4 minutes ago    Up 4 minutes    127.0.0.1:8080->80/tcp, 127.0.0.1:14005->4005/tcp    ultralisp_app
101b8acd2106   ultralisp_worker                       "s6-svscan /etc/s6"      4 minutes ago    Up 4 minutes    80/tcp, 127.0.0.1:14006->4005/tcp                    ultralisp_worker
38281be13d25   artefactual/gearmand:1.1.19.1-alpine   "docker-entrypoint.s…"   4 minutes ago    Up 4 minutes    127.0.0.1:4730->4730/tcp                             ultralisp_gearman
0c101b2d137b   elasticsearch:7.3.2                    "/usr/local/bin/dock…"   4 minutes ago    Up 4 minutes    127.0.0.1:9200->9200/tcp, 127.0.0.1:9300->9300/tcp   ultralisp_elastic
19a8f63a7c38   postgres:10                            "docker-entrypoint.s…"   17 minutes ago   Up 17 minutes   127.0.0.1:5432->5432/tcp                             ultralisp_db
457e9ec9dabb   postgres:10                            "docker-entrypoint.s…"   17 minutes ago   Up 17 minutes   127.0.0.1:5433->5432/tcp                             ultralisp_empty_db
#+end_example

*** working web page
Running the commands in the successful run should give working web page.
http://localhost:8080/

** deleting to start again
https://stackoverflow.com/questions/44785585/how-can-i-delete-all-local-docker-images

#+begin_example
docker rm -vf $(docker ps -aq)
docker rmi -f $(docker images -aq)
#+end_example
