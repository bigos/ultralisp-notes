* Trying to load doc

Trying to load and configure dependencies to run ~(ql:quickload :cl-telegram-bot-docs)~
** Roswell
This page
https://github.com/roswell/roswell/releases
lists the latest version
https://github.com/roswell/roswell/releases/tag/v22.12.14.113

Installing it successfully can be confirmed in terminal:
#+begin_example
$ ros --version
roswell 22.12.14.113(NO-GIT-REVISION)
#+end_example

** Qlot
In terminal run:
#+begin_example
$ ros install qlot
#+end_example

The documentation is wrong about shell knowing about the newly installed qlot.
The new qlot was installed to: ~/.roswell/bin/qlot~

I may need to add
#+begin_example
/home/jacek/.roswell/bin
#+end_example
to the ~$PATH~.

** Trying to follow the instructions

#+begin_example
cd ~/Programming/Lisp/cl-telegram-bot/
qlot install
#+end_example

*** Bashrc modification
That did not work, so I will add the relevant line to bashrc.
#+begin_example
$ echo '' >> ~/.bashrc
$ echo 'export PATH="$PATH:$HOME/.roswell/bin"' >> ~/.bashrc
#+end_example

Restart the terminal and try new path. After running the following commands you
should see ~.roswell/bin~ in the PATH and output of qlot help.
#+begin_example
$ echo $PATH | grep roswell/bin
$ qlot help
#+end_example

*** Trying again

**** install dependencies

got to the right folder, make sure you are in the right branch and install dependencies
#+begin_example
cd ~/Programming/Lisp/cl-telegram-bot/

git checkout documentation
git pull
git status

qlot install
#+end_example

The output installs ultralisp and lots of its archives and ends with:

#+begin_example
Downloading http://dist.ultralisp.org/archive/851/Shinmera-dissect-20220720101913.tgz
##########################################################################
Successfully installed.
#+end_example

**** install Emacs
#+begin_example
qlot exec ros emacs
#+end_example

That installs some dependencies and starts new Emacs and in the terminal
displays a hint about modifying Emacs config.

#+begin_example
helper.el installed in "/home/jacek/.roswell/helper.el"

To use, add this to your ~/.emacs:

  (load (expand-file-name "~/.roswell/helper.el"))
#+end_example

For the time being I will ignore the Emacs config modification and will just
copy the Emacs Lisp snippet to *scratch buffer* of the newly started Emacs and
eval it there.

Then I will open slime and evaluate: ~(ql:quickload :cl-telegram-bot-docs)~

That will give error:
#+begin_example
(progn (load "/home/jacek/.roswell/lisp/slime/2023.02.15/swank-loader.lisp" :verbose t) (funcall (read-from-string "swank-loader:init") :from-emacs t) (funcall (read-from-string "swank:start-server") "/tmp/slime.120993"))

fatal error encountered in SBCL pid 125425 tid 125425:
core was built for runtime "6521a6bafe5f-root-2023-03-29-02-18-45" but this is "jacek-ixtreme-M5850-jacek-2023-04-17-19-31-34"


Process inferior-lisp exited abnormally with code 1
#+end_example

Now I will close all Emacs instances and will modify the Emacs config adding the
recommended snippet to my Emacs config.
#+begin_example
(load (expand-file-name "~/.roswell/helper.el"))
#+end_example

That leads to an error. Starting ~emacs --debug-init~ gives this error.
#+begin_example
Debugger entered--Lisp error: (void-function slime-setup)
  (slime-setup roswell-slime-contribs)
  (let ((slime-directory (roswell-directory type))) (add-to-list 'load-path slime-directory) (require 'slime-autoloads) (setq slime-backend (expand-file-name "swank-loader.lisp" slime-directory)) (setq slime-path slime-directory) (slime-setup roswell-slime-contribs))
  (cond ((equal type "slime") (let ((slime-directory (roswell-directory type))) (add-to-list 'load-path slime-directory) (require 'slime-autoloads) (setq slime-backend (expand-file-name "swank-loader.lisp" slime-directory)) (setq slime-path slime-directory) (slime-setup roswell-slime-contribs))) ((equal type "sly") (add-to-list 'load-path (roswell-directory type)) (require 'sly-autoloads)))
  (let ((type (or (condition-case nil (progn (roswell-opt "emacs.type")) (error nil)) "slime"))) (cond ((equal type "slime") (let ((slime-directory (roswell-directory type))) (add-to-list 'load-path slime-directory) (require 'slime-autoloads) (setq slime-backend (expand-file-name "swank-loader.lisp" slime-directory)) (setq slime-path slime-directory) (slime-setup roswell-slime-contribs))) ((equal type "sly") (add-to-list 'load-path (roswell-directory type)) (require 'sly-autoloads))))
  eval-buffer(#<buffer  *load*-702221> nil "/home/jacek/.roswell/helper.el" nil t)  ; Reading at buffer position 1541
#+end_example

I suspect problem in helper and will start debugging.
file:~/.roswell/helper.el::1

Initial suspicion about incorrectly detected emacs type was wrong.
file:~/.roswell/helper.el::30
and trying to run slime from the terminal and finding lisp version showed I was
running my experimental sbcl compiled from source when I invoked slime from Emacs.

**** Trying ros run in the terminal in the wrong folder

Running in the terminal gives me different lisp version:
#+begin_example
$ ros run
* (lisp-implementation-type)
"SBCL"
* (lisp-implementation-version)
"2.3.3"
#+end_example

but then I have error again
#+begin_example
* (ql:quickload :cl-telegram-bot-docs)

debugger invoked on a QUICKLISP-CLIENT:SYSTEM-NOT-FOUND in thread
#<THREAD tid=148860 "main thread" RUNNING {10044A0113}>:
  System "cl-telegram-bot-docs" not found

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [CONTINUE               ] Try again
  1: [ABORT                  ] Give up on "cl-telegram-bot-docs"
  2: [REGISTER-LOCAL-PROJECTS] Register local projects and try again.
  3:                           Exit debugger, returning to top level.

((LABELS QUICKLISP-CLIENT::RECURSE :IN QUICKLISP-CLIENT::COMPUTE-LOAD-STRATEGY) "cl-telegram-bot-docs")
   source: (CERROR "Try again" 'SYSTEM-NOT-FOUND :NAME NAME)
#+end_example

**** Trying ros run in the terminal in the RIGHT folder

It gives another error
#+begin_example
acek@jacek-ixtreme-M5850:~/Programming/Lisp/cl-telegram-bot$ ros run
* (ql:quickload :docs-builder)
To load "docs-builder":
  Load 5 ASDF systems:
    alexandria asdf bordeaux-threads named-readtables uiop
  Install 4 Quicklisp releases:
    doc docs-builder log4cl pythonic-string-reader
Downloading http://beta.quicklisp.org/archive/log4cl/2021-12-09/log4cl-20211209-git.tgz
##########################################################################
Downloading http://beta.quicklisp.org/archive/pythonic-string-reader/2018-07-11/pythonic-string-reader-20180711-git.tgz
##########################################################################
Downloading http://beta.quicklisp.org/archive/doc/2023-02-14/doc-20230214-git.tgz
##########################################################################
Downloading http://beta.quicklisp.org/archive/docs-builder/2023-02-14/docs-builder-20230214-git.tgz
##########################################################################
; Loading "docs-builder"
[package log4cl.package-setup]....................
[package log4cl-impl]....;
; caught ERROR:
;   READ error during COMPILE-FILE:
;
;     Lock on package SB-C violated when interning LAMBDA-PARENT while in package
;     LOG4CL-IMPL.
;   See also:
;     The SBCL Manual, Node "Package Locks"
;
;     (in form starting at line: 99, column: 0, position: 3779)

debugger invoked on a UIOP/LISP-BUILD:COMPILE-FILE-ERROR in thread
#<THREAD tid=156897 "main thread" RUNNING {10044A0113}>:
  COMPILE-FILE-ERROR while
  compiling #<CL-SOURCE-FILE "log4cl" "src" "naming-sbcl">

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                        ] Retry
                                     compiling #<CL-SOURCE-FILE "log4cl" "src" "naming-sbcl">.
  1: [ACCEPT                       ] Continue, treating
                                     compiling #<CL-SOURCE-FILE "log4cl" "src" "naming-sbcl">
                                     as having been successful.
  2:                                 Retry ASDF operation.
  3: [CLEAR-CONFIGURATION-AND-RETRY] Retry ASDF operation after resetting the
                                     configuration.
  4:                                 Retry ASDF operation.
  5:                                 Retry ASDF operation after resetting the
                                     configuration.
  6: [ABORT                        ] Give up on "docs-builder"
  7: [REGISTER-LOCAL-PROJECTS      ] Register local projects and try again.
  8:                                 Exit debugger, returning to top level.

(UIOP/LISP-BUILD:CHECK-LISP-COMPILE-RESULTS NIL T T "~/asdf-action::format-action/" ((#<ASDF/LISP-ACTION:COMPILE-OP > . #<ASDF/LISP-ACTION:CL-SOURCE-FILE "log4cl" "src" "naming-sbcl">)))
   error finding frame source: Bogus form-number: the source file has probably
                               changed too much to cope with.
   source: NIL
0] 6
;
; compilation unit aborted
;   caught 2 fatal ERROR conditions
;   caught 1 ERROR condition

(:DOCS-BUILDER)

#+end_example

This is the suspect line
file:~/.roswell/lisp/quicklisp/dists/quicklisp/software/log4cl-20211209-git/src/naming-sbcl.lisp::108

permalink
https://github.com/7max/log4cl/blob/d6293f9f1b6b8871b0a4417c4bb22afb9910b97f/src/naming-sbcl.lisp#L106



crazy headless chicken chase
file:~/Programming/sbcl/src/compiler/ir1util.lisp::357

file:~/Programming/sbcl/src/compiler/node.lisp::31


could it be...
file:~/Programming/sbcl/src/compiler/ir1util.lisp::357

**** Trying to run sbcl in terminal in right folder and using Emacs for REPL

in terminal
#+begin_example
jacek@jacek-Inspiron-7306-2n1:~/Programming/Lisp/cl-telegram-bot$ ros run
* (ql:quickload :swank)
* (swank:create-server :port 4005)
#+end_example

in Emacs
#+begin_example
M-x slime-connect
#+end_example

in Emacs REPL
#+begin_example
(ql:quickload :cl-telegram-bot-docs)
#+end_example
gives error ~System "cl-telegram-bot-docs" not found~

verifying if the REPL from terminal can see ultralisp
#+begin_example
CL-USER> (ql:system-apropos "telegram")
#<SYSTEM cl-telegram-bot / cl-telegram-bot-20230214-git / quicklisp 2023-02-15>
; No value
#+end_example
only one system was found, so I need to add ultralisp and repeat apropos.

#+begin_example
(ql-dist:install-dist "http://dist.ultralisp.org/" :prompt nil)
(ql:system-apropos "telegram")
#+end_example
Now apropos finds many ultralisp examples


so, in Emacs REPL, try again
#+begin_example
(ql:quickload :cl-telegram-bot-docs)
#+end_example
and it fails with
#+begin_example
; Evaluation aborted on #<QUICKLISP-CLIENT:SYSTEM-NOT-FOUND {10060C6FE3}>.
#+end_example

i seem to be in correct path
#+begin_example
(uiop:getcwd)
#P"/home/jacek/Programming/Lisp/cl-telegram-bot/"
#+end_example

** strange finding
In one terminal tab I had sbcl running with Emacs REPL connected to it.
I opened another tab and qlot would not work.

#+begin_example
jacek@jacek-Inspiron-7306-2n1:~/Programming/Lisp/cl-telegram-bot$ qlot help
Unhandled ASDF/FIND-COMPONENT:MISSING-COMPONENT in thread #<SB-THREAD:THREAD tid=32148 "main thread" RUNNING
                                                             {1004490113}>:
  Component #:QLOT/CLI not found

Backtrace for: #<SB-THREAD:THREAD tid=32148 "main thread" RUNNING {1004490113}>
0: (SB-DEBUG::DEBUGGER-DISABLED-HOOK Component #:QLOT/CLI not found #<unused argument> :QUIT T)
1: (SB-DEBUG::RUN-HOOK *INVOKE-DEBUGGER-HOOK* Component #:QLOT/CLI not found)
2: (INVOKE-DEBUGGER Component #:QLOT/CLI not found)
3: (ERROR ASDF/FIND-COMPONENT:MISSING-COMPONENT :REQUIRES #:QLOT/CLI)
4: ((:METHOD ASDF/OPERATE:OPERATE (SYMBOL T)) ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI) [fast-method]
5: ((SB-PCL::EMF ASDF/OPERATE:OPERATE) #<unused argument> #<unused argument> ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI)
6: ((LAMBDA NIL :IN ASDF/OPERATE:OPERATE))
7: ((:METHOD ASDF/OPERATE:OPERATE :AROUND (T T)) ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI) [fast-method]
8: (ASDF/SESSION:CALL-WITH-ASDF-SESSION #<FUNCTION (LAMBDA NIL :IN ASDF/OPERATE:OPERATE) {10023D5B6B}> :OVERRIDE T :KEY NIL :OVERRIDE-CACHE T :OVERRIDE-FORCING NIL)
9: ((LAMBDA NIL :IN ASDF/OPERATE:OPERATE))
10: (ASDF/SESSION:CALL-WITH-ASDF-SESSION #<FUNCTION (LAMBDA NIL :IN ASDF/OPERATE:OPERATE) {10023BD4DB}> :OVERRIDE NIL :KEY NIL :OVERRIDE-CACHE NIL :OVERRIDE-FORCING NIL)
11: ((:METHOD ASDF/OPERATE:OPERATE :AROUND (T T)) ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI) [fast-method]
12: (ASDF/OPERATE:LOAD-SYSTEM #:QLOT/CLI)

#+end_example

Closing that new tab, closing Emacs and closing the terminal sbcl allows me to try qlot again.
#+begin_example
jacek@jacek-Inspiron-7306-2n1:~/Programming/Lisp/cl-telegram-bot$ qlot install
Unhandled ASDF/FIND-COMPONENT:MISSING-COMPONENT in thread #<SB-THREAD:THREAD tid=32490 "main thread" RUNNING
                                                             {1004490113}>:
  Component #:QLOT/CLI not found

Backtrace for: #<SB-THREAD:THREAD tid=32490 "main thread" RUNNING {1004490113}>
0: (SB-DEBUG::DEBUGGER-DISABLED-HOOK Component #:QLOT/CLI not found #<unused argument> :QUIT T)
1: (SB-DEBUG::RUN-HOOK *INVOKE-DEBUGGER-HOOK* Component #:QLOT/CLI not found)
2: (INVOKE-DEBUGGER Component #:QLOT/CLI not found)
3: (ERROR ASDF/FIND-COMPONENT:MISSING-COMPONENT :REQUIRES #:QLOT/CLI)
4: ((:METHOD ASDF/OPERATE:OPERATE (SYMBOL T)) ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI) [fast-method]
5: ((SB-PCL::EMF ASDF/OPERATE:OPERATE) #<unused argument> #<unused argument> ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI)
6: ((LAMBDA NIL :IN ASDF/OPERATE:OPERATE))
7: ((:METHOD ASDF/OPERATE:OPERATE :AROUND (T T)) ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI) [fast-method]
8: (ASDF/SESSION:CALL-WITH-ASDF-SESSION #<FUNCTION (LAMBDA NIL :IN ASDF/OPERATE:OPERATE) {10023D5B6B}> :OVERRIDE T :KEY NIL :OVERRIDE-CACHE T :OVERRIDE-FORCING NIL)
9: ((LAMBDA NIL :IN ASDF/OPERATE:OPERATE))
10: (ASDF/SESSION:CALL-WITH-ASDF-SESSION #<FUNCTION (LAMBDA NIL :IN ASDF/OPERATE:OPERATE) {10023BD4DB}> :OVERRIDE NIL :KEY NIL :OVERRIDE-CACHE NIL :OVERRIDE-FORCING NIL)
11: ((:METHOD ASDF/OPERATE:OPERATE :AROUND (T T)) ASDF/LISP-ACTION:LOAD-OP #:QLOT/CLI) [fast-method]
12: (ASDF/OPERATE:LOAD-SYSTEM #:QLOT/CLI)
13: ((LAMBDA NIL :IN "/home/jacek/.roswell/bin/qlot"))

#+end_example

And again we have no luck
